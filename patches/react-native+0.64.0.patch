diff --git a/node_modules/react-native/Libraries/Components/Button.js b/node_modules/react-native/Libraries/Components/Button.js
index 9659a71..ed9b838 100644
--- a/node_modules/react-native/Libraries/Components/Button.js
+++ b/node_modules/react-native/Libraries/Components/Button.js
@@ -21,8 +21,8 @@ const View = require('./View/View');
 
 const invariant = require('invariant');
 
-import type {PressEvent} from '../Types/CoreEventTypes';
-import type {ColorValue} from '../StyleSheet/StyleSheet';
+import type { PressEvent } from '../Types/CoreEventTypes';
+import type { ColorValue } from '../StyleSheet/StyleSheet';
 
 type ButtonProps = $ReadOnly<{|
   /**
@@ -31,109 +31,109 @@ type ButtonProps = $ReadOnly<{|
    */
   title: string,
 
-  /**
-    Handler to be called when the user taps the button. The first function
-    argument is an event in form of [PressEvent](pressevent).
-   */
-  onPress: (event?: PressEvent) => mixed,
+    /**
+      Handler to be called when the user taps the button. The first function
+      argument is an event in form of [PressEvent](pressevent).
+     */
+    onPress: (event?: PressEvent) => mixed,
 
-  /**
-    If `true`, doesn't play system sound on touch.
+      /**
+        If `true`, doesn't play system sound on touch.
     
-    @platform android
+        @platform android
     
-    @default false
-   */
-  touchSoundDisabled?: ?boolean,
+        @default false
+       */
+      touchSoundDisabled ?: ? boolean,
 
-  /**
-    Color of the text (iOS), or background color of the button (Android).
+      /**
+        Color of the text (iOS), or background color of the button (Android).
     
-    @default {@platform android} '#2196F3'
-    @default {@platform ios} '#007AFF'
-   */
-  color?: ?ColorValue,
+        @default {@platform android} '#2196F3'
+        @default {@platform ios} '#007AFF'
+       */
+      color ?: ? ColorValue,
 
-  /**
-    TV preferred focus.
+      /**
+        TV preferred focus.
     
-    @platform tv
+        @platform tv
     
-    @default false
-   */
-  hasTVPreferredFocus?: ?boolean,
+        @default false
+       */
+      hasTVPreferredFocus ?: ? boolean,
 
-  /**
-    Designates the next view to receive focus when the user navigates down. See
-    the [Android documentation][android:nextFocusDown].
+      /**
+        Designates the next view to receive focus when the user navigates down. See
+        the [Android documentation][android:nextFocusDown].
     
-    [android:nextFocusDown]:
-    https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusDown
+        [android:nextFocusDown]:
+        https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusDown
     
-    @platform android, tv
-   */
-  nextFocusDown?: ?number,
+        @platform android, tv
+       */
+      nextFocusDown ?: ? number,
 
-  /**
-    Designates the next view to receive focus when the user navigates forward.
-    See the [Android documentation][android:nextFocusForward].
+      /**
+        Designates the next view to receive focus when the user navigates forward.
+        See the [Android documentation][android:nextFocusForward].
     
-    [android:nextFocusForward]:
-    https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusForward
+        [android:nextFocusForward]:
+        https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusForward
     
-    @platform android, tv
-   */
-  nextFocusForward?: ?number,
+        @platform android, tv
+       */
+      nextFocusForward ?: ? number,
 
-  /**
-    Designates the next view to receive focus when the user navigates left. See
-    the [Android documentation][android:nextFocusLeft].
+      /**
+        Designates the next view to receive focus when the user navigates left. See
+        the [Android documentation][android:nextFocusLeft].
     
-    [android:nextFocusLeft]:
-    https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusLeft
+        [android:nextFocusLeft]:
+        https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusLeft
     
-    @platform android, tv
-   */
-  nextFocusLeft?: ?number,
+        @platform android, tv
+       */
+      nextFocusLeft ?: ? number,
 
-  /**
-    Designates the next view to receive focus when the user navigates right. See
-    the [Android documentation][android:nextFocusRight].
+      /**
+        Designates the next view to receive focus when the user navigates right. See
+        the [Android documentation][android:nextFocusRight].
     
-    [android:nextFocusRight]:
-    https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusRight
+        [android:nextFocusRight]:
+        https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusRight
     
-    @platform android, tv
-   */
-  nextFocusRight?: ?number,
+        @platform android, tv
+       */
+      nextFocusRight ?: ? number,
 
-  /**
-    Designates the next view to receive focus when the user navigates up. See
-    the [Android documentation][android:nextFocusUp].
+      /**
+        Designates the next view to receive focus when the user navigates up. See
+        the [Android documentation][android:nextFocusUp].
     
-    [android:nextFocusUp]:
-    https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusUp
+        [android:nextFocusUp]:
+        https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusUp
     
-    @platform android, tv
-   */
-  nextFocusUp?: ?number,
+        @platform android, tv
+       */
+      nextFocusUp ?: ? number,
 
-  /**
-    Text to display for blindness accessibility features.
-   */
-  accessibilityLabel?: ?string,
+      /**
+        Text to display for blindness accessibility features.
+       */
+      accessibilityLabel ?: ? string,
 
-  /**
-    If `true`, disable all interactions for this component.
+      /**
+        If `true`, disable all interactions for this component.
     
-    @default false
-   */
-  disabled?: ?boolean,
+        @default false
+       */
+      disabled ?: ? boolean,
 
-  /**
-    Used to locate this view in end-to-end tests.
-   */
-  testID?: ?string,
+      /**
+        Used to locate this view in end-to-end tests.
+       */
+      testID ?: ? string,
 |}>;
 
 /**
@@ -268,9 +268,9 @@ class Button extends React.Component<ButtonProps> {
     const textStyles = [styles.text];
     if (color) {
       if (Platform.OS === 'ios') {
-        textStyles.push({color: color});
+        textStyles.push({ color: color });
       } else {
-        buttonStyles.push({backgroundColor: color});
+        buttonStyles.push({ backgroundColor: color });
       }
     }
     const accessibilityState = {};
@@ -303,7 +303,7 @@ class Button extends React.Component<ButtonProps> {
         onPress={onPress}
         touchSoundDisabled={touchSoundDisabled}>
         <View style={buttonStyles}>
-          <Text style={textStyles} disabled={disabled}>
+          <Text style={[textStyles, { color: 'red' }]} disabled={disabled}>
             {formattedTitle}
           </Text>
         </View>
